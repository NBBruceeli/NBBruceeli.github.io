<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>node+koa学习完整</title>
      <link href="/2022/09/22/node+koa%20%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/09/22/node+koa%20%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一-项目的初始化"><a href="#一-项目的初始化" class="headerlink" title="一. 项目的初始化"></a>一. 项目的初始化</h1><h2 id="1-npm-初始化"><a href="#1-npm-初始化" class="headerlink" title="1 npm 初始化"></a>1 npm 初始化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>生成<code>package.json</code>文件:</p><ul><li>记录项目的依赖</li></ul><h2 id="2-git-初始化"><a href="#2-git-初始化" class="headerlink" title="2 git 初始化"></a>2 git 初始化</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>生成’.git’隐藏文件夹, git 的本地仓库</p><h2 id="3-创建-ReadMe-文件"><a href="#3-创建-ReadMe-文件" class="headerlink" title="3 创建 ReadMe 文件"></a>3 创建 ReadMe 文件</h2><h1 id="二-搭建项目"><a href="#二-搭建项目" class="headerlink" title="二. 搭建项目"></a>二. 搭建项目</h1><h2 id="1-安装-Koa-框架"><a href="#1-安装-Koa-框架" class="headerlink" title="1 安装 Koa 框架"></a>1 安装 Koa 框架</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install koa</span><br></pre></td></tr></table></figure><h2 id="2-编写最基本的-app"><a href="#2-编写最基本的-app" class="headerlink" title="2 编写最基本的 app"></a>2 编写最基本的 app</h2><p>创建<code>src/main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Koa</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">ctx, next</span>) =&gt;</span> &#123;</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;server is running on http://localhost:3000&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-测试"><a href="#3-测试" class="headerlink" title="3 测试"></a>3 测试</h2><p>在终端, 使用<code>node src/main.js</code></p><p><img src="http://image.brojie.cn/image-20210521142016066.png" alt="image-20210521142016066"></p><h1 id="三-项目的基本优化"><a href="#三-项目的基本优化" class="headerlink" title="三. 项目的基本优化"></a>三. 项目的基本优化</h1><h2 id="1-自动重启服务"><a href="#1-自动重启服务" class="headerlink" title="1 自动重启服务"></a>1 自动重启服务</h2><p>安装 nodemon 工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nodemon -D</span><br></pre></td></tr></table></figure><p>编写<code>package.json</code>脚本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nodemon ./src/main.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>执行<code>npm run dev</code>启动服务</p><p><img src="http://image.brojie.cn/image-20210521142807478.png" alt="image-20210521142807478"></p><h2 id="2-读取配置文件"><a href="#2-读取配置文件" class="headerlink" title="2 读取配置文件"></a>2 读取配置文件</h2><p>安装<code>dotenv</code>, 读取根目录中的<code>.env</code>文件, 将配置写到<code>process.env</code>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i dotenv</span><br></pre></td></tr></table></figure><p>创建<code>.env</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">APP_PORT=8000</span><br></pre></td></tr></table></figure><p>创建<code>src/config/config.default.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dotenv = <span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">dotenv.<span class="title function_">config</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(process.env.APP_PORT)</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = process.<span class="property">env</span></span><br></pre></td></tr></table></figure><p>改写<code>main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">APP_PORT</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./config/config.default&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Koa</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">ctx, next</span>) =&gt;</span> &#123;</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="string">&#x27;hello api&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">APP_PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`server is running on http://localhost:<span class="subst">$&#123;APP_PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="四-添加路由"><a href="#四-添加路由" class="headerlink" title="四. 添加路由"></a>四. 添加路由</h1><p>路由: 根据不同的 URL, 调用对应处理函数</p><h2 id="1-安装-koa-router"><a href="#1-安装-koa-router" class="headerlink" title="1 安装 koa-router"></a>1 安装 koa-router</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i koa-router</span><br></pre></td></tr></table></figure><p>步骤:</p><ol><li>导入包</li><li>实例化对象</li><li>编写路由</li><li>注册中间件</li></ol><h2 id="2-编写路由"><a href="#2-编写路由" class="headerlink" title="2 编写路由"></a>2 编写路由</h2><p>创建<code>src/router</code>目录, 编写<code>user.route.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Router</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">Router</span>(&#123; <span class="attr">prefix</span>: <span class="string">&#x27;/users&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GET /users/</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">ctx, next</span>) =&gt;</span> &#123;</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="string">&#x27;hello users&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure><h2 id="3-改写-main-js"><a href="#3-改写-main-js" class="headerlink" title="3 改写 main.js"></a>3 改写 main.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">APP_PORT</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./config/config.default&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;./router/user.route&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Koa</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(userRouter.<span class="title function_">routes</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">APP_PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`server is running on http://localhost:<span class="subst">$&#123;APP_PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="五-目录结构优化"><a href="#五-目录结构优化" class="headerlink" title="五. 目录结构优化"></a>五. 目录结构优化</h1><h2 id="1-将-http-服务和-app-业务拆分"><a href="#1-将-http-服务和-app-业务拆分" class="headerlink" title="1 将 http 服务和 app 业务拆分"></a>1 将 http 服务和 app 业务拆分</h2><p>创建<code>src/app/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Koa</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;../router/user.route&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Koa</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(userRouter.<span class="title function_">routes</span>())</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = app</span><br></pre></td></tr></table></figure><p>改写<code>main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">APP_PORT</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./config/config.default&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="built_in">require</span>(<span class="string">&#x27;./app&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">APP_PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`server is running on http://localhost:<span class="subst">$&#123;APP_PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="2-将路由和控制器拆分"><a href="#2-将路由和控制器拆分" class="headerlink" title="2 将路由和控制器拆分"></a>2 将路由和控制器拆分</h2><p>路由: 解析 URL, 分布给控制器对应的方法</p><p>控制器: 处理不同的业务</p><p>改写<code>user.route.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Router</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; register, login &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../controller/user.controller&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">Router</span>(&#123; <span class="attr">prefix</span>: <span class="string">&#x27;/users&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册接口</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/register&#x27;</span>, register)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, login)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure><p>创建<code>controller/user.controller.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">register</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;用户注册成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserController</span>()</span><br></pre></td></tr></table></figure><h1 id="六-解析-body"><a href="#六-解析-body" class="headerlink" title="六. 解析 body"></a>六. 解析 body</h1><h2 id="1-安装-koa-body"><a href="#1-安装-koa-body" class="headerlink" title="1 安装 koa-body"></a>1 安装 koa-body</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i koa-body</span><br></pre></td></tr></table></figure><h2 id="2-注册中间件"><a href="#2-注册中间件" class="headerlink" title="2 注册中间件"></a>2 注册中间件</h2><p>改写<code>app/index.js</code></p><p><img src="http://image.brojie.cn/image-20210521165536780.png" alt="image-20210521165536780"></p><h2 id="3-解析请求数据"><a href="#3-解析请求数据" class="headerlink" title="3 解析请求数据"></a>3 解析请求数据</h2><p>改写<code>user.controller.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createUser &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../service/user.service&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">register</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 获取数据</span></span><br><span class="line">    <span class="comment">// console.log(ctx.request.body)</span></span><br><span class="line">    <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line">    <span class="comment">// 2. 操作数据库</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">createUser</span>(user_name, password)</span><br><span class="line">    <span class="comment">// console.log(res)</span></span><br><span class="line">    <span class="comment">// 3. 返回结果</span></span><br><span class="line">    ctx.<span class="property">body</span> = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserController</span>()</span><br></pre></td></tr></table></figure><h2 id="4-拆分-service-层"><a href="#4-拆分-service-层" class="headerlink" title="4 拆分 service 层"></a>4 拆分 service 层</h2><p>service 层主要是做数据库处理</p><p>创建<code>src/service/user.service.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">createUser</span>(<span class="params">user_name, password</span>) &#123;</span><br><span class="line">    <span class="comment">// todo: 写入数据库</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;写入数据库成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserService</span>()</span><br></pre></td></tr></table></figure><h1 id="七-集成-sequlize"><a href="#七-集成-sequlize" class="headerlink" title="七. 集成 sequlize"></a>七. 集成 sequlize</h1><p>sequelize ORM 数据库工具</p><p>ORM: 对象关系映射</p><ul><li>数据表映射(对应)一个类</li><li>数据表中的数据行(记录)对应一个对象</li><li>数据表字段对应对象的属性</li><li>数据表的操作对应对象的方法</li></ul><h2 id="1-安装-sequelize"><a href="#1-安装-sequelize" class="headerlink" title="1 安装 sequelize"></a>1 安装 sequelize</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mysql2 sequelize</span><br></pre></td></tr></table></figure><h2 id="2-连接数据库"><a href="#2-连接数据库" class="headerlink" title="2 连接数据库"></a>2 连接数据库</h2><p><code>src/db/seq.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Sequelize</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;sequelize&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="variable constant_">MYSQL_HOST</span>,</span><br><span class="line">  <span class="variable constant_">MYSQL_PORT</span>,</span><br><span class="line">  <span class="variable constant_">MYSQL_USER</span>,</span><br><span class="line">  <span class="variable constant_">MYSQL_PWD</span>,</span><br><span class="line">  <span class="variable constant_">MYSQL_DB</span>,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/config.default&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> seq = <span class="keyword">new</span> <span class="title class_">Sequelize</span>(<span class="variable constant_">MYSQL_DB</span>, <span class="variable constant_">MYSQL_USER</span>, <span class="variable constant_">MYSQL_PWD</span>, &#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="variable constant_">MYSQL_HOST</span>,</span><br><span class="line">  <span class="attr">dialect</span>: <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">seq</span><br><span class="line">  .<span class="title function_">authenticate</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据库连接成功&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>, err)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = seq</span><br></pre></td></tr></table></figure><h2 id="3-编写配置文件"><a href="#3-编写配置文件" class="headerlink" title="3 编写配置文件"></a>3 编写配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">APP_PORT = 8000</span><br><span class="line"></span><br><span class="line">MYSQL_HOST = localhost</span><br><span class="line">MYSQL_PORT = 3306</span><br><span class="line">MYSQL_USER = root</span><br><span class="line">MYSQL_PWD = 123456</span><br><span class="line">MYSQL_DB = zdsc</span><br></pre></td></tr></table></figure><h1 id="八-创建-User-模型"><a href="#八-创建-User-模型" class="headerlink" title="八. 创建 User 模型"></a>八. 创建 User 模型</h1><h2 id="1-拆分-Model-层"><a href="#1-拆分-Model-层" class="headerlink" title="1 拆分 Model 层"></a>1 拆分 Model 层</h2><p>sequelize 主要通过 Model 对应数据表</p><p>创建<code>src/model/user.model.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">DataTypes</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;sequelize&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> seq = <span class="built_in">require</span>(<span class="string">&#x27;../db/seq&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建模型(Model zd_user -&gt; 表 zd_users)</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = seq.<span class="title function_">define</span>(<span class="string">&#x27;zd_user&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// id 会被sequelize自动创建, 管理</span></span><br><span class="line">  <span class="attr">user_name</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">DataTypes</span>.<span class="property">STRING</span>,</span><br><span class="line">    <span class="attr">allowNull</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">unique</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">comment</span>: <span class="string">&#x27;用户名, 唯一&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">DataTypes</span>.<span class="title function_">CHAR</span>(<span class="number">64</span>),</span><br><span class="line">    <span class="attr">allowNull</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">comment</span>: <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">is_admin</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">DataTypes</span>.<span class="property">BOOLEAN</span>,</span><br><span class="line">    <span class="attr">allowNull</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">defaultValue</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">comment</span>: <span class="string">&#x27;是否为管理员, 0: 不是管理员(默认); 1: 是管理员&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 强制同步数据库(创建数据表)</span></span><br><span class="line"><span class="comment">// User.sync(&#123; force: true &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">User</span></span><br></pre></td></tr></table></figure><h1 id="九-添加用户入库"><a href="#九-添加用户入库" class="headerlink" title="九. 添加用户入库"></a>九. 添加用户入库</h1><p>所有数据库的操作都在 Service 层完成, Service 调用 Model 完成数据库操作</p><p>改写<code>src/service/user.service.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&#x27;../model/use.model&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">createUser</span>(<span class="params">user_name, password</span>) &#123;</span><br><span class="line">    <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="comment">// User.create(&#123;</span></span><br><span class="line">    <span class="comment">//   // 表的字段</span></span><br><span class="line">    <span class="comment">//   user_name: user_name,</span></span><br><span class="line">    <span class="comment">//   password: password</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// await表达式: promise对象的值</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">create</span>(&#123; user_name, password &#125;)</span><br><span class="line">    <span class="comment">// console.log(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">dataValues</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserService</span>()</span><br></pre></td></tr></table></figure><p>同时, 改写<code>user.controller.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createUser &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../service/user.service&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">register</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 获取数据</span></span><br><span class="line">    <span class="comment">// console.log(ctx.request.body)</span></span><br><span class="line">    <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line">    <span class="comment">// 2. 操作数据库</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">createUser</span>(user_name, password)</span><br><span class="line">    <span class="comment">// console.log(res)</span></span><br><span class="line">    <span class="comment">// 3. 返回结果</span></span><br><span class="line">    ctx.<span class="property">body</span> = &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;用户注册成功&#x27;</span>,</span><br><span class="line">      <span class="attr">result</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: res.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">user_name</span>: res.<span class="property">user_name</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserController</span>()</span><br></pre></td></tr></table></figure><h1 id="十-错误处理"><a href="#十-错误处理" class="headerlink" title="十. 错误处理"></a>十. 错误处理</h1><p>在控制器中, 对不同的错误进行处理, 返回不同的提示错误提示, 提高代码质量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createUser, getUerInfo &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../service/user.service&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">register</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 获取数据</span></span><br><span class="line">    <span class="comment">// console.log(ctx.request.body)</span></span><br><span class="line">    <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合法性</span></span><br><span class="line">    <span class="keyword">if</span> (!user_name || !password) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户名或密码为空&#x27;</span>, ctx.<span class="property">request</span>.<span class="property">body</span>)</span><br><span class="line">      ctx.<span class="property">status</span> = <span class="number">400</span></span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&#x27;10001&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;用户名或密码为空&#x27;</span>,</span><br><span class="line">        <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 合理性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">getUerInfo</span>(&#123; user_name &#125;)) &#123;</span><br><span class="line">      ctx.<span class="property">status</span> = <span class="number">409</span></span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&#x27;10002&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;用户已经存在&#x27;</span>,</span><br><span class="line">        <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2. 操作数据库</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">createUser</span>(user_name, password)</span><br><span class="line">    <span class="comment">// console.log(res)</span></span><br><span class="line">    <span class="comment">// 3. 返回结果</span></span><br><span class="line">    ctx.<span class="property">body</span> = &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;用户注册成功&#x27;</span>,</span><br><span class="line">      <span class="attr">result</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: res.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">user_name</span>: res.<span class="property">user_name</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserController</span>()</span><br></pre></td></tr></table></figure><p>在 service 中封装函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&#x27;../model/use.model&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">createUser</span>(<span class="params">user_name, password</span>) &#123;</span><br><span class="line">    <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="comment">// await表达式: promise对象的值</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">create</span>(&#123; user_name, password &#125;)</span><br><span class="line">    <span class="comment">// console.log(res)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">dataValues</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getUerInfo</span>(<span class="params">&#123; id, user_name, password, is_admin &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> whereOpt = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    id &amp;&amp; <span class="title class_">Object</span>.<span class="title function_">assign</span>(whereOpt, &#123; id &#125;)</span><br><span class="line">    user_name &amp;&amp; <span class="title class_">Object</span>.<span class="title function_">assign</span>(whereOpt, &#123; user_name &#125;)</span><br><span class="line">    password &amp;&amp; <span class="title class_">Object</span>.<span class="title function_">assign</span>(whereOpt, &#123; password &#125;)</span><br><span class="line">    is_admin &amp;&amp; <span class="title class_">Object</span>.<span class="title function_">assign</span>(whereOpt, &#123; is_admin &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">      <span class="attr">attributes</span>: [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;user_name&#x27;</span>, <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;is_admin&#x27;</span>],</span><br><span class="line">      <span class="attr">where</span>: whereOpt,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res ? res.<span class="property">dataValues</span> : <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserService</span>()</span><br></pre></td></tr></table></figure><h1 id="十一-拆分中间件"><a href="#十一-拆分中间件" class="headerlink" title="十一. 拆分中间件"></a>十一. 拆分中间件</h1><p>为了使代码的逻辑更加清晰, 我们可以拆分一个中间件层, 封装多个中间件函数</p><p><img src="http://image.brojie.cn/image-20210524154353520.png" alt="image-20210524154353520"></p><h2 id="1-拆分中间件"><a href="#1-拆分中间件" class="headerlink" title="1 拆分中间件"></a>1 拆分中间件</h2><p>添加<code>src/middleware/user.middleware.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; getUerInfo &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../service/user.service&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; userFormateError, userAlreadyExited &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../constant/err.type&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">userValidator</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line">  <span class="comment">// 合法性</span></span><br><span class="line">  <span class="keyword">if</span> (!user_name || !password) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户名或密码为空&#x27;</span>, ctx.<span class="property">request</span>.<span class="property">body</span>)</span><br><span class="line">    ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userFormateError, ctx)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">verifyUser</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user_name &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">getUerInfo</span>(&#123; user_name &#125;)) &#123;</span><br><span class="line">    ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userAlreadyExited, ctx)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  userValidator,</span><br><span class="line">  verifyUser,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-统一错误处理"><a href="#2-统一错误处理" class="headerlink" title="2 统一错误处理"></a>2 统一错误处理</h2><ul><li>在出错的地方使用<code>ctx.app.emit</code>提交错误</li><li>在 app 中通过<code>app.on</code>监听</li></ul><p>编写统一的错误定义文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">userFormateError</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10001&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户名或密码为空&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">userAlreadyExited</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10002&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户已经存在&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-错误处理函数"><a href="#3-错误处理函数" class="headerlink" title="3 错误处理函数"></a>3 错误处理函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">err, ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> status = <span class="number">500</span></span><br><span class="line">  <span class="keyword">switch</span> (err.<span class="property">code</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;10001&#x27;</span>:</span><br><span class="line">      status = <span class="number">400</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;10002&#x27;</span>:</span><br><span class="line">      status = <span class="number">409</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      status = <span class="number">500</span></span><br><span class="line">  &#125;</span><br><span class="line">  ctx.<span class="property">status</span> = status</span><br><span class="line">  ctx.<span class="property">body</span> = err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改写<code>app/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> errHandler = <span class="built_in">require</span>(<span class="string">&#x27;./errHandler&#x27;</span>)</span><br><span class="line"><span class="comment">// 统一的错误处理</span></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, errHandler)</span><br></pre></td></tr></table></figure><h1 id="十二-加密"><a href="#十二-加密" class="headerlink" title="十二. 加密"></a>十二. 加密</h1><p>在将密码保存到数据库之前, 要对密码进行加密处理</p><p>123123abc (加盐) 加盐加密</p><h2 id="1-安装-bcryptjs"><a href="#1-安装-bcryptjs" class="headerlink" title="1 安装 bcryptjs"></a>1 安装 bcryptjs</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i bcryptjs</span><br></pre></td></tr></table></figure><h2 id="2-编写加密中间件"><a href="#2-编写加密中间件" class="headerlink" title="2 编写加密中间件"></a>2 编写加密中间件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">crpytPassword</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> salt = bcrypt.<span class="title function_">genSaltSync</span>(<span class="number">10</span>)</span><br><span class="line">  <span class="comment">// hash保存的是 密文</span></span><br><span class="line">  <span class="keyword">const</span> hash = bcrypt.<span class="title function_">hashSync</span>(password, salt)</span><br><span class="line"></span><br><span class="line">  ctx.<span class="property">request</span>.<span class="property">body</span>.<span class="property">password</span> = hash</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-在-router-中使用"><a href="#3-在-router-中使用" class="headerlink" title="3 在 router 中使用"></a>3 在 router 中使用</h2><p>改写<code>user.router.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Router</span> = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  userValidator,</span><br><span class="line">  verifyUser,</span><br><span class="line">  crpytPassword,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../middleware/user.middleware&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; register, login &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../controller/user.controller&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">Router</span>(&#123; <span class="attr">prefix</span>: <span class="string">&#x27;/users&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册接口</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/register&#x27;</span>, userValidator, verifyUser, crpytPassword, register)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, login)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure><h1 id="十三-登录验证"><a href="#十三-登录验证" class="headerlink" title="十三. 登录验证"></a>十三. 登录验证</h1><p>流程:</p><ul><li>验证格式</li><li>验证用户是否存在</li><li>验证密码是否匹配</li></ul><p>改写<code>src/middleware/user.middleware.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&#x27;bcryptjs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; getUerInfo &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../service/user.service&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  userFormateError,</span><br><span class="line">  userAlreadyExited,</span><br><span class="line">  userRegisterError,</span><br><span class="line">  userDoesNotExist,</span><br><span class="line">  userLoginError,</span><br><span class="line">  invalidPassword,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;../constant/err.type&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">userValidator</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line">  <span class="comment">// 合法性</span></span><br><span class="line">  <span class="keyword">if</span> (!user_name || !password) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户名或密码为空&#x27;</span>, ctx.<span class="property">request</span>.<span class="property">body</span>)</span><br><span class="line">    ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userFormateError, ctx)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">verifyUser</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user_name &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// if (await getUerInfo(&#123; user_name &#125;)) &#123;</span></span><br><span class="line">  <span class="comment">//   ctx.app.emit(&#x27;error&#x27;, userAlreadyExited, ctx)</span></span><br><span class="line">  <span class="comment">//   return</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getUerInfo</span>(&#123; user_name &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户名已经存在&#x27;</span>, &#123; user_name &#125;)</span><br><span class="line">      ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userAlreadyExited, ctx)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取用户信息错误&#x27;</span>, err)</span><br><span class="line">    ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userRegisterError, ctx)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">crpytPassword</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> salt = bcrypt.<span class="title function_">genSaltSync</span>(<span class="number">10</span>)</span><br><span class="line">  <span class="comment">// hash保存的是 密文</span></span><br><span class="line">  <span class="keyword">const</span> hash = bcrypt.<span class="title function_">hashSync</span>(password, salt)</span><br><span class="line"></span><br><span class="line">  ctx.<span class="property">request</span>.<span class="property">body</span>.<span class="property">password</span> = hash</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">verifyLogin</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 1. 判断用户是否存在(不存在:报错)</span></span><br><span class="line">  <span class="keyword">const</span> &#123; user_name, password &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getUerInfo</span>(&#123; user_name &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户名不存在&#x27;</span>, &#123; user_name &#125;)</span><br><span class="line">      ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userDoesNotExist, ctx)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 密码是否匹配(不匹配: 报错)</span></span><br><span class="line">    <span class="keyword">if</span> (!bcrypt.<span class="title function_">compareSync</span>(password, res.<span class="property">password</span>)) &#123;</span><br><span class="line">      ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, invalidPassword, ctx)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(err)</span><br><span class="line">    <span class="keyword">return</span> ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, userLoginError, ctx)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  userValidator,</span><br><span class="line">  verifyUser,</span><br><span class="line">  crpytPassword,</span><br><span class="line">  verifyLogin,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义错误类型</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">userFormateError</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10001&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户名或密码为空&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">userAlreadyExited</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10002&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户已经存在&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">userRegisterError</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10003&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户注册错误&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">userDoesNotExist</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10004&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户不存在&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">userLoginError</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10005&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;用户登录失败&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">invalidPassword</span>: &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">&#x27;10006&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;密码不匹配&#x27;</span>,</span><br><span class="line">    <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改写路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, userValidator, verifyLogin, login)</span><br></pre></td></tr></table></figure><h1 id="十四-用户的认证"><a href="#十四-用户的认证" class="headerlink" title="十四. 用户的认证"></a>十四. 用户的认证</h1><p>登录成功后, 给用户颁发一个令牌 token, 用户在以后的每一次请求中携带这个令牌.</p><p>jwt: jsonwebtoken</p><ul><li>header: 头部</li><li>payload: 载荷</li><li>signature: 签名</li></ul><h2 id="1-颁发-token"><a href="#1-颁发-token" class="headerlink" title="1 颁发 token"></a>1 颁发 token</h2><h3 id="1-安装-jsonwebtoken"><a href="#1-安装-jsonwebtoken" class="headerlink" title="1) 安装 jsonwebtoken"></a>1) 安装 jsonwebtoken</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i jsonwebtoken</span><br></pre></td></tr></table></figure><h3 id="2-在控制器中改写-login-方法"><a href="#2-在控制器中改写-login-方法" class="headerlink" title="2) 在控制器中改写 login 方法"></a>2) 在控制器中改写 login 方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">ctx, next</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user_name &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 获取用户信息(在token的payload中, 记录id, user_name, is_admin)</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 从返回结果对象中剔除password属性, 将剩下的属性放到res对象</span></span><br><span class="line">    <span class="keyword">const</span> &#123; password, ...res &#125; = <span class="keyword">await</span> <span class="title function_">getUerInfo</span>(&#123; user_name &#125;)</span><br><span class="line"></span><br><span class="line">    ctx.<span class="property">body</span> = &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;用户登录成功&#x27;</span>,</span><br><span class="line">      <span class="attr">result</span>: &#123;</span><br><span class="line">        <span class="attr">token</span>: jwt.<span class="title function_">sign</span>(res, <span class="variable constant_">JWT_SECRET</span>, &#123; <span class="attr">expiresIn</span>: <span class="string">&#x27;1d&#x27;</span> &#125;),</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;用户登录失败&#x27;</span>, err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-定义私钥"><a href="#3-定义私钥" class="headerlink" title="3) 定义私钥"></a>3) 定义私钥</h3><p>在<code>.env</code>定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JWT_SECRET = xzd</span><br></pre></td></tr></table></figure><h2 id="2-用户认证"><a href="#2-用户认证" class="headerlink" title="2 用户认证"></a>2 用户认证</h2><h3 id="1-创建-auth-中间件"><a href="#1-创建-auth-中间件" class="headerlink" title="1) 创建 auth 中间件"></a>1) 创建 auth 中间件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">JWT_SECRET</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/config.default&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; tokenExpiredError, invalidToken &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../constant/err.type&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">auth</span> = <span class="keyword">async</span> (<span class="params">ctx, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; authorization &#125; = ctx.<span class="property">request</span>.<span class="property">header</span></span><br><span class="line">  <span class="keyword">const</span> token = authorization.<span class="title function_">replace</span>(<span class="string">&#x27;Bearer &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(token)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// user中包含了payload的信息(id, user_name, is_admin)</span></span><br><span class="line">    <span class="keyword">const</span> user = jwt.<span class="title function_">verify</span>(token, <span class="variable constant_">JWT_SECRET</span>)</span><br><span class="line">    ctx.<span class="property">state</span>.<span class="property">user</span> = user</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (err.<span class="property">name</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;TokenExpiredError&#x27;</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;token已过期&#x27;</span>, err)</span><br><span class="line">        <span class="keyword">return</span> ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, tokenExpiredError, ctx)</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;JsonWebTokenError&#x27;</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;无效的token&#x27;</span>, err)</span><br><span class="line">        <span class="keyword">return</span> ctx.<span class="property">app</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, invalidToken, ctx)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  auth,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-改写-router"><a href="#2-改写-router" class="headerlink" title="2) 改写 router"></a>2) 改写 router</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改密码接口</span></span><br><span class="line">router.<span class="title function_">patch</span>(<span class="string">&#x27;/&#x27;</span>, auth, <span class="function">(<span class="params">ctx, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ctx.<span class="property">state</span>.<span class="property">user</span>)</span><br><span class="line">  ctx.<span class="property">body</span> = <span class="string">&#x27;修改密码成功&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>新的内容1.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解析浏览器地址上的url参数</title>
      <link href="/2022/09/20/%E8%A7%A3%E6%9E%90url%E5%8F%82%E6%95%B0/"/>
      <url>/2022/09/20/%E8%A7%A3%E6%9E%90url%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="解析url参数"><a href="#解析url参数" class="headerlink" title="解析url参数"></a>解析url参数</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getSearchParams</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> searchPar = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>)</span><br><span class="line">  <span class="keyword">const</span> paramsObj = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> searchPar.<span class="title function_">entries</span>()) &#123;</span><br><span class="line">    paramsObj[key] = value</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> paramsObj</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>·</p><h2 id="这里用到URLSearchParams-函数，"><a href="#这里用到URLSearchParams-函数，" class="headerlink" title="这里用到URLSearchParams()函数，"></a>这里用到<a href="https://blog.csdn.net/qq_39207948/article/details/87986540">URLSearchParams()函数</a>，</h2><h3 id="关于详情可以参考链接"><a href="#关于详情可以参考链接" class="headerlink" title="关于详情可以参考链接"></a>关于详情可以参考链接</h3><h4 id="https-blog-csdn-net-qq-39207948-article-details-87986540"><a href="#https-blog-csdn-net-qq-39207948-article-details-87986540" class="headerlink" title="https://blog.csdn.net/qq_39207948/article/details/87986540"></a><a href="https://blog.csdn.net/qq_39207948/article/details/87986540">https://blog.csdn.net/qq_39207948/article/details/87986540</a></h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MAC——gitlab密钥配置流程</title>
      <link href="/2022/09/20/ssh%E5%AF%86%E9%92%A5%E6%B5%81%E7%A8%8B/"/>
      <url>/2022/09/20/ssh%E5%AF%86%E9%92%A5%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="MAC——gitlab密钥配置流程"><a href="#MAC——gitlab密钥配置流程" class="headerlink" title="MAC——gitlab密钥配置流程"></a>MAC——gitlab密钥配置流程</h1><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>·<br>·</p><h2 id="生成后直接回车即可——告诉你设置的路径直接回车即可，设置保护密码，无需直接回车即可"><a href="#生成后直接回车即可——告诉你设置的路径直接回车即可，设置保护密码，无需直接回车即可" class="headerlink" title="生成后直接回车即可——告诉你设置的路径直接回车即可，设置保护密码，无需直接回车即可"></a>生成后直接回车即可——告诉你设置的路径直接回车即可，设置保护密码，无需直接回车即可</h2><p>·<br>·</p><h2 id="复制密钥"><a href="#复制密钥" class="headerlink" title="复制密钥"></a>复制密钥</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pbcopy &lt; ~<span class="regexp">/.ssh/i</span>d_ed25519.<span class="property">pub</span>  <span class="comment">//回车后直接去gitlab配置密钥页面cv即可</span></span><br></pre></td></tr></table></figure><p>·<br>·</p><h2 id="补充-查看当前密钥-删除某个密钥"><a href="#补充-查看当前密钥-删除某个密钥" class="headerlink" title="补充-查看当前密钥-删除某个密钥"></a>补充-查看当前密钥-删除某个密钥</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls ~<span class="regexp">/.ssh      /</span><span class="regexp">/查看当前密钥</span></span><br><span class="line"><span class="regexp">rm - rf ~/</span>.<span class="property">ssh</span>/id_ed25519.<span class="property">pub</span>     <span class="comment">//删除某个密钥</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前端进行简单的大屏适配</title>
      <link href="/2022/09/19/%E5%A4%A7%E5%B1%8F%E9%80%82%E9%85%8D/"/>
      <url>/2022/09/19/%E5%A4%A7%E5%B1%8F%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="公共style文件下创建Common-sass文件进行配置"><a href="#公共style文件下创建Common-sass文件进行配置" class="headerlink" title="公共style文件下创建Common.sass文件进行配置"></a>公共style文件下创建Common.sass文件进行配置</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@use <span class="string">&quot;sass:math&quot;</span>;</span><br><span class="line"><span class="comment">//根据页面宽度做适配</span></span><br><span class="line">@<span class="keyword">function</span> <span class="title function_">vw</span>(<span class="params">$px</span>) &#123;</span><br><span class="line">  @<span class="keyword">return</span> (math.<span class="title function_">div</span>(<span class="number">100</span>,<span class="number">1920</span>)) * $px + vw;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据页面高度做适配</span></span><br><span class="line">@<span class="keyword">function</span> <span class="title function_">vh</span>(<span class="params">$px</span>) &#123;</span><br><span class="line">  @<span class="keyword">return</span> (math.<span class="title function_">div</span>(<span class="number">100</span>,<span class="number">1080</span>)) * $px + vh;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置字体及颜色</span></span><br><span class="line">@mixin <span class="title function_">font</span>(<span class="params">$family,$size,$color:#FFF</span>) &#123;</span><br><span class="line">  <span class="attr">color</span>: $color;</span><br><span class="line">  <span class="attr">font</span>: &#123;</span><br><span class="line">    <span class="attr">family</span>: $family;</span><br><span class="line">    <span class="attr">size</span>: <span class="title function_">vw</span>($size);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>·<br>·<br>·<br>·</p><h1 id="在外部sass文件进行调用"><a href="#在外部sass文件进行调用" class="headerlink" title="在外部sass文件进行调用"></a>在外部sass文件进行调用</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">&quot;src/Style/Common&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">width</span>: <span class="title function_">vw</span>(<span class="number">100</span>)</span><br><span class="line"><span class="attr">height</span>: <span class="title function_">vh</span>(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>金额进行千分位格式化</title>
      <link href="/2022/09/19/%E9%87%91%E9%A2%9D%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
      <url>/2022/09/19/%E9%87%91%E9%A2%9D%E6%A0%BC%E5%BC%8F%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="金额格式化"><a href="#金额格式化" class="headerlink" title="金额格式化"></a>金额格式化</h1><h2 id="调用示例"><a href="#调用示例" class="headerlink" title="调用示例"></a>调用示例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">moneyFormat</span>(<span class="number">10000000</span>)    <span class="comment">// 10,000,000.00</span></span><br><span class="line"><span class="title function_">moneyFormat</span>(<span class="number">10000000</span>, <span class="number">3</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)    <span class="comment">// 10-000-000.000</span></span><br></pre></td></tr></table></figure><p>·<br>·<br>·</p><h2 id="封装方法代码"><a href="#封装方法代码" class="headerlink" title="封装方法代码"></a>封装方法代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &#123;number&#125; number：要格式化的数字</span></span><br><span class="line"><span class="comment">// &#123;number&#125; decimals：保留几位小数</span></span><br><span class="line"><span class="comment">// &#123;string&#125; dec_point：小数点符号</span></span><br><span class="line"><span class="comment">// &#123;string&#125; thousands_sep：千分位符号</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">moneyFormat</span> = (<span class="params">number, decimals, dec_point, thousands_sep</span>) =&gt; &#123;</span><br><span class="line">  number = (number + <span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/[^0-9+-Ee.]/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> n = !<span class="built_in">isFinite</span>(+number) ? <span class="number">0</span> : +number</span><br><span class="line">  <span class="keyword">const</span> prec = !<span class="built_in">isFinite</span>(+decimals) ? <span class="number">2</span> : <span class="title class_">Math</span>.<span class="title function_">abs</span>(decimals)</span><br><span class="line">  <span class="keyword">const</span> sep = <span class="keyword">typeof</span> thousands_sep === <span class="string">&#x27;undefined&#x27;</span> ? <span class="string">&#x27;,&#x27;</span> : thousands_sep</span><br><span class="line">  <span class="keyword">const</span> dec = <span class="keyword">typeof</span> dec_point === <span class="string">&#x27;undefined&#x27;</span> ? <span class="string">&#x27;.&#x27;</span> : dec_point</span><br><span class="line">  <span class="keyword">let</span> s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">const</span> toFixedFix = <span class="keyword">function</span>(<span class="params">n, prec</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> k = <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">10</span>, prec)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">ceil</span>(n * k) / k</span><br><span class="line">  &#125;</span><br><span class="line">  s = (prec ? <span class="title function_">toFixedFix</span>(n, prec) : <span class="string">&#x27;&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">round</span>(n)).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> re = <span class="regexp">/(-?\d+)(\d&#123;3&#125;)/</span></span><br><span class="line">  <span class="keyword">while</span> (re.<span class="title function_">test</span>(s[<span class="number">0</span>])) &#123;</span><br><span class="line">    s[<span class="number">0</span>] = s[<span class="number">0</span>].<span class="title function_">replace</span>(re, <span class="string">&#x27;$1&#x27;</span> + sep + <span class="string">&#x27;$2&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((s[<span class="number">1</span>] || <span class="string">&#x27;&#x27;</span>).<span class="property">length</span> &lt; prec) &#123;</span><br><span class="line">    s[<span class="number">1</span>] = s[<span class="number">1</span>] || <span class="string">&#x27;&#x27;</span></span><br><span class="line">    s[<span class="number">1</span>] += <span class="keyword">new</span> <span class="title class_">Array</span>(prec - s[<span class="number">1</span>].<span class="property">length</span> + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> s.<span class="title function_">join</span>(dec)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>koa2跨域配置后请求不带cookie问题解决</title>
      <link href="/2022/09/16/koa-cookie/"/>
      <url>/2022/09/16/koa-cookie/</url>
      
        <content type="html"><![CDATA[<h1 id="1-首先需要配置好自己的koa2跨域"><a href="#1-首先需要配置好自己的koa2跨域" class="headerlink" title="1.首先需要配置好自己的koa2跨域"></a>1.首先需要配置好自己的koa2跨域</h1><h2 id="首先引入koa2-cors"><a href="#首先引入koa2-cors" class="headerlink" title="首先引入koa2-cors"></a>首先引入koa2-cors</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save koa2-cors</span><br></pre></td></tr></table></figure><p>·<br>·</p><h2 id="进行跨域的配置，需要写在router之上，在设置cookie跨域credentials为true时，必须使用指定域名。"><a href="#进行跨域的配置，需要写在router之上，在设置cookie跨域credentials为true时，必须使用指定域名。" class="headerlink" title="进行跨域的配置，需要写在router之上，在设置cookie跨域credentials为true时，必须使用指定域名。"></a>进行跨域的配置，需要写在router之上，在设置cookie跨域credentials为true时，必须使用指定域名。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(&#123;</span><br><span class="line">  <span class="attr">origin</span>: <span class="keyword">function</span> (<span class="params">ctx</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (ctx.<span class="property">url</span> === <span class="string">&#x27;/test&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;*&quot;</span>; <span class="comment">// 允许来自所有域名请求</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;http://127.0.0.1:3001&#x27;</span>; <span class="comment">//指定域名的请求</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">exposeHeaders</span>: [],</span><br><span class="line">  <span class="attr">maxAge</span>: <span class="number">50</span>, <span class="comment">//本次预检请求的有效期，单位为秒</span></span><br><span class="line">  <span class="attr">allowMethods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&quot;OPTION&quot;</span>], <span class="comment">// 所允许的HTTP请求方法</span></span><br><span class="line">  <span class="attr">allowHeaders</span>: [<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;Authorization&#x27;</span>, <span class="string">&#x27;Accept&#x27;</span>], <span class="comment">// 服务器支持的所有头信息字段</span></span><br><span class="line">  <span class="attr">credentials</span>: <span class="literal">true</span> <span class="comment">// 是否允许发送Cookie</span></span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><p>·<br>·</p><h2 id="配置axios跨域和cookie跨域请求头带上"><a href="#配置axios跨域和cookie跨域请求头带上" class="headerlink" title="配置axios跨域和cookie跨域请求头带上"></a>配置axios跨域和cookie跨域请求头带上</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>);</span><br><span class="line"></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">withCredentials</span> = <span class="literal">true</span>; <span class="comment">//实现cookie跨域情况下，请求头带上cookie</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://127.0.0.1:3000&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">1000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>·<br>·</p><h2 id="完成以上步骤后，你会发现请求实现带上cookie了。"><a href="#完成以上步骤后，你会发现请求实现带上cookie了。" class="headerlink" title="完成以上步骤后，你会发现请求实现带上cookie了。"></a>完成以上步骤后，你会发现请求实现带上cookie了。</h2><p><img src="https://s1.328888.xyz/2022/09/20/2z8hR.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
